<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="11.3">
  <zoom_level>10</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>250</x>
      <y>300</y>
      <w>280</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>BWTEncoding class
--
-rotationsOfText: String[]
-rotatingString: String
-compressedString: String
-stringArraySize: int
--
+BWTEncoding(originalString: String)
+encode(): String
-textRotations(): void
-sortRotations(): void
-compressString(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>550</x>
      <y>330</y>
      <w>330</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>BWTDecoding class
--
-stringArraySize: int
-compressedFileStringArray: String[]
-tempSortingArray: String[]
-stringIndex: int
-compressedString: String
--
+BWTDecoding(String compressedFileString)
+decode(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>240</x>
      <y>210</y>
      <w>290</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>RLEncoding class
--
+encode(message: String): byte[]
+decode(codedMessage: byte[]): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>380</x>
      <y>10</y>
      <w>290</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>/Coder interface/
--
+encode(message: String): byte[]
+decode(codedMessage: byte[]): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>60</x>
      <y>90</y>
      <w>470</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>ArithmeticCoder class
--
+encode(message: String): byte[]
-maxZeroes(value: BigInteger, highValue: BigInteger): BigInteger
+decode(codedMessage: byte[]): String
makeKey(message: String): CharMap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>550</x>
      <y>90</y>
      <w>300</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>HuffmanCode class
--
-q: PriorityQueue&lt;Node&gt;
-toCode: HashMap&lt;Character, String&gt;
-toChar: HashMap&lt;String, Character&gt;
--
+huffman(n: int): Node
+buildTable(root: Node): void
+postorder(n: Node, s: String): void
+compress(s: String): String
+decompress(s: String): String
+saveToFile(s: String): void
+encode(text: String): byte[]
+decode(codedMessage: byte[]): String
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
